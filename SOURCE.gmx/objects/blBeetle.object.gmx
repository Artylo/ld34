<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_blBeetle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
friction = 0.1;
image_speed = 0.1;
gravity = 0.5;
mspeed = 1;

mhp = 50;
hp = mhp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
if(!position_meeting(x,bbox_bottom+vspeed,platform))
{
    gravity = 0.5;
    
}
else
{
    gravity = 0;
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI

if(hp &lt;= 0)
{
    repeat(irandom_range(30,50))
    {
        with(instance_create(irandom_range(bbox_left,bbox_right),
                            irandom_range(bbox_top,bbox_bottom),
                            dust))
        {
            scale *= 4;
            motion_add(irandom(360),1);
        }
    }
    with(vine)
    {
        if(director.mlevel == 1)
        {
            size += 3/global.enemiesLeft;
            isLeft += 3*64/global.enemiesLeft;
            isMoving = true;
        }
        else
        {
            size += 4/global.enemiesLeft;
            isLeft += 4*64/global.enemiesLeft;
            isMoving = true;
        }
    }
    instance_destroy();
}

if(x &lt; 0 or x &gt; room_width) hp = 0;

/*
//Old AI, I thought of using, but looked funny. Fix it if you are using the source.
if(vine.bbox_left &gt; bbox_right)
{
    if(!place_meeting(bbox_right+1,y,vine))
    {
        hspeed = mspeed;
        image_xscale = abs(image_xscale);
    }
    else
    {
        hspeed = 0;
    }
}
if(vine.bbox_right &lt; bbox_left)
{
    if(!place_meeting(bbox_left-1,y,vine))
    {
        hspeed = -mspeed;
        image_xscale = abs(image_xscale)*-1;
    }
    else
    {
        hspeed = 0;
    }   
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hp &lt; mhp)
{
    draw_healthbar(bbox_left,bbox_top - 4,bbox_right,bbox_top - 2, hp/mhp*100, c_black, c_white, c_white,0,true,true);   
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
